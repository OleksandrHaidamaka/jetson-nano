diff --git a/hardware/nvidia/t23x/nv-public/overlay/Makefile b/hardware/nvidia/t23x/nv-public/overlay/Makefile
index 93728f4..b77399c 100644
--- a/hardware/nvidia/t23x/nv-public/overlay/Makefile
+++ b/hardware/nvidia/t23x/nv-public/overlay/Makefile
@@ -65,6 +65,8 @@ dtbo-y += tegra234-p3767-camera-p3768-imx219-A.dtbo
 dtbo-y += tegra234-p3767-camera-p3768-imx219-imx477.dtbo
 dtbo-y += tegra234-p3767-camera-p3768-imx477-C.dtbo
 dtbo-y += tegra234-p3767-camera-p3768-imx477-A.dtbo
+dtbo-y += tegra234-p3767-0000-p3768-0000-a0-2lane-ar0234.dtbo
+dtbo-y += tegra234-p3767-0000-p3768-0000-a0-4lane-ar0234.dtbo
 
 ifneq ($(dtb-y),)
 dtb-y := $(addprefix $(makefile-path)/,$(dtb-y))
diff --git a/hardware/nvidia/t23x/nv-public/overlay/tegra234-p3767-0000-p3768-0000-a0-2lane-ar0234.dts b/hardware/nvidia/t23x/nv-public/overlay/tegra234-p3767-0000-p3768-0000-a0-2lane-ar0234.dts
new file mode 100644
index 0000000..0a02bf5
--- /dev/null
+++ b/hardware/nvidia/t23x/nv-public/overlay/tegra234-p3767-0000-p3768-0000-a0-2lane-ar0234.dts
@@ -0,0 +1,90 @@
+
+
+/dts-v1/;
+/plugin/;
+
+#define CAM0_PWDN	TEGRA234_MAIN_GPIO(H, 6)
+#define CAM1_PWDN	TEGRA234_MAIN_GPIO(AC, 0)
+#define CAM_I2C_MUX 	TEGRA234_AON_GPIO(CC, 3)
+
+#include <dt-bindings/clock/tegra234-clock.h>
+#include <dt-bindings/gpio/tegra234-gpio.h>
+#include <dt-bindings/tegra234-p3767-0000-common.h>
+#include "tegra234-p3767-camera-p3768-ar0234.dtsi"
+
+/ {
+	overlay-name = "AR0234 Sensor 2lane";
+	jetson-header-name = "Jetson 24pin CSI Connector";
+	compatible = JETSON_COMPATIBLE_P3768;
+	
+	fragment-camera-ar0234@0 {
+		target-path = "/";
+		__overlay__ {
+			bus@0 {
+				cam_i2cmux{
+					status = "okay";
+					compatible = "i2c-mux-gpio";
+					#address-cells = <1>;
+					#size-cells = <0>;
+					i2c-parent = <&cam_i2c>;
+					mux-gpios = <&gpio_aon CAM_I2C_MUX GPIO_ACTIVE_HIGH>;
+					i2c@0 {
+						reg = <0>;
+						#address-cells = <1>;
+						#size-cells = <0>;
+						pca6408_20_a: pca6408@20 {
+							/* For onsemi GPIO expander */
+							compatible = "ti,tca6408";
+							gpio-controller;
+							#gpio-cells = <2>;
+							reg = <0x20>;
+							//vcc-supply = <&vdd_1v8_sys>;
+							status = "okay";
+							pca6408_20_outlow {
+								/* LED --> GPIO 7 */
+								gpio-hog;
+								gpios = < 7 1 >;
+								output-low;
+								label = "pca6408_20_outlow_7";
+							};
+						};
+						
+						
+					};
+					
+					i2c@1 {
+						reg = <1>;
+						#address-cells = <1>;
+						#size-cells = <0>;
+						pca6408_20_b: pca6408@20 {
+							/* For onsemi GPIO expander */
+							compatible = "ti,tca6408";
+							gpio-controller;
+							#gpio-cells = <2>;
+							reg = <0x20>;
+							//vcc-supply = <&vdd_1v8_sys>;
+							status = "okay";
+							pca6408_20_outlow {
+								/* LED --> GPIO 7 */
+								gpio-hog;
+								gpios = < 7 1 >;
+								output-low;
+								label = "pca6408_20_outlow_7";
+							};
+						};
+						
+					};
+					
+				};
+				gpio@2200000 {
+					camera-control-output-low {
+						gpio-hog;
+						output-low;
+						gpios = <CAM0_PWDN 0 CAM1_PWDN 0>;
+						label = "cam0-pwdn","cam1-pwdn";
+					};
+				};
+			};
+		};
+	};
+};
diff --git a/hardware/nvidia/t23x/nv-public/overlay/tegra234-p3767-0000-p3768-0000-a0-4lane-ar0234.dts b/hardware/nvidia/t23x/nv-public/overlay/tegra234-p3767-0000-p3768-0000-a0-4lane-ar0234.dts
new file mode 100644
index 0000000..c7e9a23
--- /dev/null
+++ b/hardware/nvidia/t23x/nv-public/overlay/tegra234-p3767-0000-p3768-0000-a0-4lane-ar0234.dts
@@ -0,0 +1,289 @@
+
+/dts-v1/;
+/plugin/;
+
+
+#define CAM0_PWDN	TEGRA234_MAIN_GPIO(H, 6)
+#define CAM1_PWDN	TEGRA234_MAIN_GPIO(AC, 0)
+#define CAM_I2C_MUX 	TEGRA234_AON_GPIO(CC, 3)
+
+#include <dt-bindings/clock/tegra234-clock.h>
+#include <dt-bindings/gpio/tegra234-gpio.h>
+#include <dt-bindings/tegra234-p3767-0000-common.h>
+
+
+/ {
+	overlay-name = "AR0234 Sensor 4lane";
+	jetson-header-name = "Jetson 24pin CSI Connector";
+	compatible = JETSON_COMPATIBLE_P3768;
+	fragment@0 {
+		target-path = "/";
+		__overlay__ {
+			bus@0 {
+				cam_i2cmux{
+					compatible = "i2c-mux-gpio";
+					status = "okay";
+					#address-cells = <1>;
+					#size-cells = <0>;
+					i2c-parent = <&cam_i2c>;
+					mux-gpios = <&gpio_aon CAM_I2C_MUX GPIO_ACTIVE_HIGH>;
+					i2c@1 {
+						reg = <1>;
+						#address-cells = <1>;
+						#size-cells = <0>;
+						pca6408_20_b: pca6408@20 {
+							compatible = "ti,tca6408";
+							gpio-controller;
+							#gpio-cells = <2>;
+							reg = <0x20>;
+							//vcc-supply = <&p3768_vdd_3v3_sys>;
+							status = "okay";
+							pca6408_20_outlow {
+								/* LED --> GPIO 7 */
+								gpio-hog;
+								gpios = < 7 1 >;
+								output-low;
+								label = "pca6408_20_outlow_7";
+							};
+						};
+						
+					};
+				};
+				gpio@2200000 {
+					camera-control-output-low {
+						gpio-hog;
+						output-low;
+						gpios = <CAM0_PWDN 0 CAM1_PWDN 0>;
+						label = "cam0-pwdn","cam1-pwdn";
+					};
+				};
+			};
+		};
+	};
+	
+	
+	fragment@1 {
+		target-path = "/";
+		__overlay__ {
+			tegra-capture-vi {
+				num-channels = <1>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						ecam_ar0234_vi_in0: endpoint {
+							port-index = <2>;
+							bus-width = <4>;
+							remote-endpoint = <&ecam_ar0234_csi_out0>;
+						};
+					};
+				};
+			};
+			tegra-camera-platform {
+				compatible = "nvidia, tegra-camera-platform";
+				num_csi_lanes = <4>;
+				max_lane_speed = <1500000>;
+				min_bits_per_pixel = <16>;
+				vi_peak_byte_per_pixel = <2>;
+				vi_bw_margin_pct = <25>;
+				max_pixel_rate = <240000>;
+				isp_peak_byte_per_pixel = <5>;
+				isp_bw_margin_pct = <25>;
+				modules {
+					module0 {
+						status = "okay";
+						badge = "jakku_front_ar0234";
+						position = "front";
+						orientation = "1";
+						drivernode0 {
+							pcl_id = "v4l2_sensor";
+							devname = "ar0234 9-0042";
+							sysfs-device-tree = "/sys/firmware/devicetree/base/bus@0/cam_i2cmux/i2c@1/ecam_ar0234_c@42";
+						};
+					};
+				};
+			};
+			
+			bus@0 {
+				
+				host1x@13e00000{
+					nvcsi@15a00000 {
+						num-channels = <1>;
+						#address-cells = <1>;
+						#size-cells = <0>;
+						channel@0 {
+							reg = <0>;
+							ports {
+								#address-cells = <1>;
+								#size-cells = <0>;
+								port@0 {
+									reg = <0>;
+									ecam_ar0234_csi_in0: endpoint@0 {
+										port-index = <2>;
+										bus-width = <4>;
+										remote-endpoint = <&ecam_ar0234_out0>;
+									};
+								};
+								port@1 {
+									reg = <1>;
+									ecam_ar0234_csi_out0: endpoint@1 {
+										remote-endpoint = <&ecam_ar0234_vi_in0>;
+									};
+								};
+							};
+						};
+					};
+				};
+				cam_i2cmux {
+					i2c@1 {
+						ar0234_cam1: ecam_ar0234_c@42 {
+							compatible = "nvidia,ar0234";
+							reg = <0x42>;
+							devnode = "video0";
+							status = "okay";
+							physical_w = "3.680";
+							physical_h = "2.760";
+							
+							sensor_model = "ar0234";
+							camera_mipi_lanes = <4>;
+							camera-mipi-clk = <1200>;
+							disable-framesync;
+							reset-gpios = <&pca6408_20_b 1 GPIO_ACTIVE_HIGH>;
+							pwdn-gpios  = <&pca6408_20_b 0 GPIO_ACTIVE_HIGH>;// Default use_sensor_mode_id is false
+							mode0 {
+								mclk_khz = "24000";
+								num_lanes = "4";
+								tegra_sinterface = "serial_c";
+								phy_mode = "DPHY";
+								discontinuous_clk = "yes";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								dynamic_pixel_bit_depth = "16";
+								csi_pixel_bit_depth = "16";
+								mode_type = "yuv";
+								
+								active_w = "1280";
+								active_h = "720";
+								pixel_phase = "uyvy";
+								readout_orientation = "90";
+								line_length = "1280";
+								inherent_gain = "1";
+								mclk_multiplier = "12.5";
+								pix_clk_hz = "300000000";
+								
+								min_gain_val = "16";
+								max_gain_val = "170"; /* 10.66x */
+								step_gain_val = "1";
+								default_gain = "16"; /* 1.00x */
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "120000000";
+								step_framerate = "1";
+								default_framerate = "120000000";
+								min_exp_time = "13"; /* us */
+								max_exp_time = "683709"; /* us */
+								
+								embedded_metadata_height = "0";
+							};
+							mode1 { /* AR0234_MODE_1920x1080_65FPS */
+								mclk_khz = "24000";
+								num_lanes = "4";
+								tegra_sinterface = "serial_c";
+								phy_mode = "DPHY";
+								discontinuous_clk = "yes";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								dynamic_pixel_bit_depth = "16";
+								csi_pixel_bit_depth = "16";
+								active_w = "1920";
+								active_h = "1080";
+								pixel_phase = "uyvy";
+								mode_type = "yuv";
+								/*pixel_t = "bayer_rggb";*/
+								readout_orientation = "90";
+								line_length = "1920";
+								inherent_gain = "1";
+								mclk_multiplier = "12.5";
+								pix_clk_hz = "300000000";
+								
+								min_gain_val = "16";
+								max_gain_val = "170";
+								step_gain_val = "1";
+								default_gain = "16";
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "120000000"; /* 28.0 fps */
+								default_framerate = "70000000"; /* 60.0 fps */
+								step_framerate = "1";
+								min_exp_time = "13";
+								max_exp_time = "683709";
+								step_exp_time = "1";
+								default_exp_time = "2495";
+								embedded_metadata_height = "0";
+							};
+							mode2 { /* AR0234_MODE_1920x1200_60FPS */
+								mclk_khz = "24000";
+								num_lanes = "4";
+								tegra_sinterface = "serial_c";
+								phy_mode = "DPHY";
+								discontinuous_clk = "yes";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								csi_pixel_bit_depth = "16";
+								active_w = "1920";
+								active_h = "1200";
+								/*pixel_t = "uyvy";*/
+								pixel_phase = "uyvy";
+								mode_type = "yuv";
+								readout_orientation = "90";
+								line_length = "1920";
+								inherent_gain = "1";
+								mclk_multiplier = "12.5";
+								pix_clk_hz = "300000000";
+								
+								gain_factor = "16";
+								default_gain = "16";
+								step_gain_val = "1";
+								framerate_factor = "1000000";
+								exposure_factor = "1000000";
+								min_gain_val = "16";
+								max_gain_val = "170"; /* 10.66x */
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "120000000"; /* 60.0 fps */
+								default_framerate = "60000000"; /* 60.0 fps */
+								step_framerate = "1";
+								min_exp_time = "13"; /* us */
+								max_exp_time = "683709"; /* us */
+								step_exp_time = "1";
+								default_exp_time = "2495";
+								embedded_metadata_height = "0";
+							};
+							
+							ports {
+								#address-cells = <1>;
+								#size-cells = <0>;
+								port@0 {
+									reg = <0>;
+									ecam_ar0234_out0: endpoint {
+										status = "okay";
+										port-index = <2>;
+										bus-width = <4>;
+										remote-endpoint = <&ecam_ar0234_csi_in0>;
+									};
+								};
+							};
+						};
+					};
+				};
+				
+			};
+		};
+	};
+};
+
+
diff --git a/hardware/nvidia/t23x/nv-public/overlay/tegra234-p3767-camera-p3768-ar0234.dtsi b/hardware/nvidia/t23x/nv-public/overlay/tegra234-p3767-camera-p3768-ar0234.dtsi
new file mode 100644
index 0000000..33e8b3b
--- /dev/null
+++ b/hardware/nvidia/t23x/nv-public/overlay/tegra234-p3767-camera-p3768-ar0234.dtsi
@@ -0,0 +1,790 @@
+// SPDX-License-Identifier: GPL-2.0-only
+// SPDX-FileCopyrightText: Copyright (c) 2023, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
+
+/dts-v1/;
+/plugin/;
+
+
+#include <dt-bindings/clock/tegra234-clock.h>
+#include <dt-bindings/gpio/tegra234-gpio.h>
+#include <dt-bindings/tegra234-p3767-0000-common.h>
+
+/ {
+	overlay-name = "Camera AR0234 Sensor";
+	jetson-header-name = "Jetson 24pin CSI Connector";
+	compatible = JETSON_COMPATIBLE_P3768;
+	
+	fragment@0 {
+		target-path = "/";
+		__overlay__ {
+			tegra-capture-vi  {
+				num-channels = <2>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						ecam_ar0234_vi_in0: endpoint {
+							port-index = <1>;
+							bus-width = <2>;
+							remote-endpoint = <&ecam_ar0234_csi_out0>;
+						};
+					};
+					port@1 {
+						reg = <1>;
+						ecam_ar0234_vi_in1: endpoint {
+							port-index = <2>;
+							bus-width = <2>;
+							remote-endpoint = <&ecam_ar0234_csi_out1>;
+						};
+					};
+				};
+			};
+			tegra-camera-platform {
+				compatible = "nvidia, tegra-camera-platform";
+				/**
+				* Physical settings to calculate max ISO BW
+				*
+				* num_csi_lanes = <>;
+				* Total number of CSI lanes when all cameras are active
+				*
+				* max_lane_speed = <>;
+				* Max lane speed in Kbit/s
+				*
+				* min_bits_per_pixel = <>;
+				* Min bits per pixel
+				*
+				* vi_peak_byte_per_pixel = <>;
+				* Max byte per pixel for the VI ISO case
+				*
+				* vi_bw_margin_pct = <>;
+				* Vi bandwidth margin in percentage
+				*
+				* max_pixel_rate = <>;
+				* Max pixel rate in Kpixel/s for the ISP ISO case
+				*
+				* isp_peak_byte_per_pixel = <>;
+				* Max byte per pixel for the ISP ISO case
+				*
+				* isp_bw_margin_pct = <>;
+				* Isp bandwidth margin in percentage
+				*/
+				num_csi_lanes = <4>;
+				max_lane_speed = <1500000>;
+				min_bits_per_pixel = <16>;
+				vi_peak_byte_per_pixel = <2>;
+				vi_bw_margin_pct = <25>;
+				max_pixel_rate = <240000>;
+				isp_peak_byte_per_pixel = <5>;
+				isp_bw_margin_pct = <25>;
+				
+				/**
+				* The general guideline for naming badge_info contains 3 parts, and is as follows,
+				* The first part is the camera_board_id for the module; if the module is in a FFD
+				* platform, then use the platform name for this part.
+				* The second part contains the position of the module, ex. "rear" or "front".
+				* The third part contains the last 6 characters of a part number which is found
+				* in the module's specsheet from the vendor.
+				*/
+				modules {
+					module0 {
+						status = "okay";
+						badge = "jakku_front_ar0234";
+						position = "front";
+						orientation = "1";
+						drivernode0 {
+							pcl_id = "v4l2_sensor";
+							devname = "ar0234 10-0042";
+							sysfs-device-tree = "/sys/firmware/devicetree/base/bus@0/cam_i2cmux/i2c@0/ecam_ar0234_a@42";
+						};
+					};
+					module1 {
+						status = "okay";
+						badge = "jakku_rear_ar0234";
+						position = "rear";
+						orientation = "1";
+						drivernode0 {
+							pcl_id = "v4l2_sensor";
+							devname = "ar0234 9-0042";
+							sysfs-device-tree = "/sys/firmware/devicetree/base/bus@0/cam_i2cmux/i2c@1/ecam_ar0234_c@42";
+						};
+					};
+				};
+			};
+			bus@0 {
+				host1x@13e00000 {
+					nvcsi@15a00000 {
+						num-channels = <2>;
+						#address-cells = <1>;
+						#size-cells = <0>;
+						channel@0 {
+							reg = <0>;
+							ports {
+								#address-cells = <1>;
+								#size-cells = <0>;
+								port@0 {
+									reg = <0>;
+									ecam_ar0234_csi_in0: endpoint@0 {
+										port-index = <1>;
+										bus-width = <2>;
+										remote-endpoint = <&ecam_ar0234_out0>;
+									};
+								};
+								port@1 {
+									reg = <1>;
+									ecam_ar0234_csi_out0: endpoint@1 {
+										remote-endpoint = <&ecam_ar0234_vi_in0>;
+									};
+								};
+							};
+						};
+						channel@1 {
+							reg = <1>;
+							ports {
+								#address-cells = <1>;
+								#size-cells = <0>;
+								port@0 {
+									reg = <0>;
+									ecam_ar0234_csi_in1: endpoint@2 {
+										port-index = <2>;
+										bus-width = <2>;
+										remote-endpoint = <&ecam_ar0234_out1>;
+									};
+								};
+								port@1 {
+									reg = <1>;
+									ecam_ar0234_csi_out1: endpoint@3 {
+										remote-endpoint = <&ecam_ar0234_vi_in1>;
+									};
+								};
+							};
+						};
+					};
+				};
+				cam_i2cmux {
+					status = "okay";
+					compatible = "i2c-mux-gpio";
+					#address-cells = <1>;
+					#size-cells = <0>;
+					mux-gpios = <&gpio_aon CAM_I2C_MUX GPIO_ACTIVE_HIGH>;
+					i2c-parent = <&cam_i2c>;
+					i2c@0 {
+						status = "okay";
+						reg = <0>;
+						#address-cells = <1>;
+						#size-cells = <0>;
+						ecam_ar0234_a@42 {
+							compatible = "nvidia,ar0234";
+							/* I2C device address */
+							reg = <0x42>;
+							
+							/* V4L2 device node location */
+							devnode = "video0";
+							status = "okay";
+							/* Physical dimensions of sensor */
+							physical_w = "3.680";
+							physical_h = "2.760";
+							
+							sensor_model = "ar0234";
+							camera_mipi_lanes = <2>;
+							camera-mipi-clk = <1200>;
+							disable-framesync;
+							reset-gpios = <&pca6408_20_a 1 GPIO_ACTIVE_HIGH>;
+							pwdn-gpios  = <&pca6408_20_a 0 GPIO_ACTIVE_HIGH>;// Default use_sensor_mode_id is false
+							/*use_sensor_mode_id = "false";*/
+							
+							/**
+							* ==== Modes ====
+							* A modeX node is required to support v4l2 driver
+							* implementation with NVIDIA camera software stack
+							*
+							* == Signal properties ==
+							*
+							* phy_mode = "";
+							* PHY mode used by the MIPI lanes for this device
+							*
+							* tegra_sinterface = "";
+							* CSI Serial interface connected to tegra
+							* Incase of virtual HW devices, use virtual
+							* For SW emulated devices, use host
+							*
+							* pix_clk_hz = "";
+							* Sensor pixel clock used for calculations like exposure and framerate
+							*
+							* readout_orientation = "0";
+							* Based on camera module orientation.
+							* Only change readout_orientation if you specifically
+							* Program a different readout order for this mode
+							*
+							* == Image format Properties ==
+							*
+							* active_w = "";
+							* Pixel active region width
+							*
+							* active_h = "";
+							* Pixel active region height
+							*
+							* pixel_t = "";
+							* The sensor readout pixel pattern
+							*
+							* line_length = "";
+							* Pixel line length (width) for sensor mode.
+							*
+							* == Source Control Settings ==
+							*
+							* Gain factor used to convert fixed point integer to float
+							* Gain range [min_gain/gain_factor, max_gain/gain_factor]
+							* Gain step [step_gain/gain_factor is the smallest step that can be configured]
+							* Default gain [Default gain to be initialized for the control.
+							*     use min_gain_val as default for optimal results]
+							* Framerate factor used to convert fixed point integer to float
+							* Framerate range [min_framerate/framerate_factor, max_framerate/framerate_factor]
+							* Framerate step [step_framerate/framerate_factor is the smallest step that can be configured]
+							* Default Framerate [Default framerate to be initialized for the control.
+							*     use max_framerate to get required performance]
+							* Exposure factor used to convert fixed point integer to float
+							* For convenience use 1 sec = 1000000us as conversion factor
+							* Exposure range [min_exp_time/exposure_factor, max_exp_time/exposure_factor]
+							* Exposure step [step_exp_time/exposure_factor is the smallest step that can be configured]
+							* Default Exposure Time [Default exposure to be initialized for the control.
+							*     Set default exposure based on the default_framerate for optimal exposure settings]
+							*
+							* gain_factor = ""; (integer factor used for floating to fixed point conversion)
+							* min_gain_val = ""; (ceil to integer)
+							* max_gain_val = ""; (ceil to integer)
+							* step_gain_val = ""; (ceil to integer)
+							* default_gain = ""; (ceil to integer)
+							* Gain limits for mode
+							*
+							* exposure_factor = ""; (integer factor used for floating to fixed point conversion)
+							* min_exp_time = ""; (ceil to integer)
+							* max_exp_time = ""; (ceil to integer)
+							* step_exp_time = ""; (ceil to integer)
+							* default_exp_time = ""; (ceil to integer)
+							* Exposure Time limits for mode (sec)
+							*
+							* framerate_factor = ""; (integer factor used for floating to fixed point conversion)
+							* min_framerate = ""; (ceil to integer)
+							* max_framerate = ""; (ceil to integer)
+							* step_framerate = ""; (ceil to integer)
+							* default_framerate = ""; (ceil to integer)
+							* Framerate limits for mode (fps)
+							*
+							* embedded_metadata_height = "";
+							* Sensor embedded metadata height in units of rows.
+							* If sensor does not support embedded metadata value should be 0.
+							*/
+#if 0
+							mode0 { /* AR0234_MODE_1280x720_120FPS */
+								mclk_khz = "24000";
+								num_lanes = "2";
+								tegra_sinterface = "serial_b";
+								phy_mode = "DPHY";
+								discontinuous_clk = "no";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								lane_polarity = "6";
+								dynamic_pixel_bit_depth = "16";
+								csi_pixel_bit_depth = "16";
+								mode_type = "yuv";
+								
+								active_w = "320";
+								active_h = "240";
+								pixel_phase = "uyvy";
+								readout_orientation = "90";
+								line_length = "320";
+								inherent_gain = "1";
+								mclk_multiplier = "9.33";
+								pix_clk_hz = "150000000";
+								min_gain_val = "16";
+								max_gain_val = "170"; /* 10.66x */
+								step_gain_val = "1";
+								default_gain = "16"; /* 1.00x */
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "120000000";
+								default_framerate = "120000000";
+								step_framerate = "1";
+								min_exp_time = "13"; /* us */
+								max_exp_time = "683709"; /* us */
+								embedded_metadata_height = "0";
+							};
+#endif
+							mode0 { /* AR0234_MODE_1280x720_120FPS */
+								mclk_khz = "24000";
+								num_lanes = "2";
+								tegra_sinterface = "serial_b";
+								phy_mode = "DPHY";
+								discontinuous_clk = "no";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								lane_polarity = "6";
+								dynamic_pixel_bit_depth = "16";
+								csi_pixel_bit_depth = "16";
+								mode_type = "yuv";
+								
+								active_w = "640";
+								active_h = "480";
+								pixel_phase = "uyvy";
+								readout_orientation = "90";
+								line_length = "640";
+								inherent_gain = "1";
+								mclk_multiplier = "9.33";
+								pix_clk_hz = "150000000";
+								min_gain_val = "16";
+								max_gain_val = "170"; /* 10.66x */
+								step_gain_val = "1";
+								default_gain = "16"; /* 1.00x */
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "120000000";
+								step_framerate = "1";
+								default_framerate = "120000000";
+								min_exp_time = "13"; /* us */
+								max_exp_time = "683709"; /* us */
+								embedded_metadata_height = "0";
+							};
+							mode1 { /* AR0234_MODE_1280x720_120FPS */
+								mclk_khz = "24000";
+								num_lanes = "2";
+								tegra_sinterface = "serial_b";
+								phy_mode = "DPHY";
+								discontinuous_clk = "no";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								lane_polarity = "6";
+								dynamic_pixel_bit_depth = "16";
+								csi_pixel_bit_depth = "16";
+								mode_type = "yuv";
+								
+								active_w = "1280";
+								active_h = "720";
+								pixel_phase = "uyvy";
+								readout_orientation = "90";
+								line_length = "1280";
+								inherent_gain = "1";
+								mclk_multiplier = "9.33";
+								pix_clk_hz = "150000000";
+								min_gain_val = "16";
+								max_gain_val = "170"; /* 10.66x */
+								step_gain_val = "1";
+								default_gain = "16"; /* 1.00x */
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "120000000";
+								step_framerate = "1";
+								default_framerate = "120000000";
+								min_exp_time = "13"; /* us */
+								max_exp_time = "683709"; /* us */
+								embedded_metadata_height = "0";
+							};
+							mode2 { /* AR0234_MODE_1920x1080_65FPS */
+								mclk_khz = "24000";
+								num_lanes = "2";
+								tegra_sinterface = "serial_b";
+								phy_mode = "DPHY";
+								discontinuous_clk = "no";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								lane_polarity = "6";
+								dynamic_pixel_bit_depth = "16";
+								csi_pixel_bit_depth = "16";
+								
+								active_w = "1920";
+								active_h = "1080";
+								pixel_phase = "uyvy";
+								mode_type = "yuv";
+								readout_orientation = "90";
+								line_length = "1920";
+								inherent_gain = "1";
+								mclk_multiplier = "9.33";
+								pix_clk_hz = "150000000";
+								min_gain_val = "16";
+								max_gain_val = "170";
+								step_gain_val = "1";
+								default_gain = "16";
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "65000000";
+								step_framerate = "1";
+								default_framerate = "65000000";
+								min_exp_time = "13";
+								max_exp_time = "683709";
+								step_exp_time = "1";
+								default_exp_time = "2495";
+								embedded_metadata_height = "0";
+							};
+							mode3 { /* AR0234_MODE_1920x1200_60FPS */
+								mclk_khz = "24000";
+								num_lanes = "2";
+								tegra_sinterface = "serial_b";
+								phy_mode = "DPHY";
+								discontinuous_clk = "no";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								lane_polarity = "6";
+								csi_pixel_bit_depth = "16";
+								
+								active_w = "1920";
+								active_h = "1200";
+								pixel_phase = "uyvy";
+								mode_type = "yuv";
+								readout_orientation = "90";
+								line_length = "1920";
+								inherent_gain = "1";
+								mclk_multiplier = "9.33";
+								pix_clk_hz = "150000000";
+								gain_factor = "16";
+								default_gain = "16";
+								step_gain_val = "1";
+								framerate_factor = "1000000";
+								exposure_factor = "1000000";
+								min_gain_val = "16";
+								max_gain_val = "170"; /* 10.66x */
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "60000000"; /* 60.0 fps */
+								default_framerate = "60000000"; /* 60.0 fps */
+								step_framerate = "1";
+								min_exp_time = "13"; /* us */
+								max_exp_time = "683709"; /* us */
+								step_exp_time = "1";
+								default_exp_time = "2495";
+								embedded_metadata_height = "0";
+							};
+							ports {
+								#address-cells = <1>;
+								#size-cells = <0>;
+								port@0 {
+									reg = <0>;
+									ecam_ar0234_out0: endpoint {
+										status = "okay";
+										port-index = <0>;
+										bus-width = <2>;
+										remote-endpoint = <&ecam_ar0234_csi_in0>;
+									};
+								};
+							};
+						};
+					};
+					i2c@1 {
+						status = "okay";
+						reg = <1>;
+						#address-cells = <1>;
+						#size-cells = <0>;
+						ecam_ar0234_c@42 {
+							compatible = "nvidia,ar0234";
+							/* I2C device address */
+							reg = <0x42>;
+							
+							/* V4L2 device node location */
+							devnode = "video1";
+							status = "okay";
+							/* Physical dimensions of sensor */
+							physical_w = "3.680";
+							physical_h = "2.760";
+							
+							sensor_model = "ar0234";
+							camera_mipi_lanes = <2>;
+							camera-mipi-clk = <1200>;
+							disable-framesync;
+							reset-gpios = <&pca6408_20_b 1 GPIO_ACTIVE_HIGH>;
+							pwdn-gpios  = <&pca6408_20_b 0 GPIO_ACTIVE_HIGH>;// Default use_sensor_mode_id is false
+							/*use_sensor_mode_id = "false";*/
+							
+							/**
+							* ==== Modes ====
+							* A modeX node is required to support v4l2 driver
+							* implementation with NVIDIA camera software stack
+							*
+							* == Signal properties ==
+							*
+							* phy_mode = "";
+							* PHY mode used by the MIPI lanes for this device
+							*
+							* tegra_sinterface = "";
+							* CSI Serial interface connected to tegra
+							* Incase of virtual HW devices, use virtual
+							* For SW emulated devices, use host
+							*
+							* pix_clk_hz = "";
+							* Sensor pixel clock used for calculations like exposure and framerate
+							*
+							* readout_orientation = "0";
+							* Based on camera module orientation.
+							* Only change readout_orientation if you specifically
+							* Program a different readout order for this mode
+							*
+							* == Image format Properties ==
+							*
+							* active_w = "";
+							* Pixel active region width
+							*
+							* active_h = "";
+							* Pixel active region height
+							*
+							* pixel_t = "";
+							* The sensor readout pixel pattern
+							*
+							* line_length = "";
+							* Pixel line length (width) for sensor mode.
+							*
+							* == Source Control Settings ==
+							*
+							* Gain factor used to convert fixed point integer to float
+							* Gain range [min_gain/gain_factor, max_gain/gain_factor]
+							* Gain step [step_gain/gain_factor is the smallest step that can be configured]
+							* Default gain [Default gain to be initialized for the control.
+							*     use min_gain_val as default for optimal results]
+							* Framerate factor used to convert fixed point integer to float
+							* Framerate range [min_framerate/framerate_factor, max_framerate/framerate_factor]
+							* Framerate step [step_framerate/framerate_factor is the smallest step that can be configured]
+							* Default Framerate [Default framerate to be initialized for the control.
+							*     use max_framerate to get required performance]
+							* Exposure factor used to convert fixed point integer to float
+							* For convenience use 1 sec = 1000000us as conversion factor
+							* Exposure range [min_exp_time/exposure_factor, max_exp_time/exposure_factor]
+							* Exposure step [step_exp_time/exposure_factor is the smallest step that can be configured]
+							* Default Exposure Time [Default exposure to be initialized for the control.
+							*     Set default exposure based on the default_framerate for optimal exposure settings]
+							*
+							* gain_factor = ""; (integer factor used for floating to fixed point conversion)
+							* min_gain_val = ""; (ceil to integer)
+							* max_gain_val = ""; (ceil to integer)
+							* step_gain_val = ""; (ceil to integer)
+							* default_gain = ""; (ceil to integer)
+							* Gain limits for mode
+							*
+							* exposure_factor = ""; (integer factor used for floating to fixed point conversion)
+							* min_exp_time = ""; (ceil to integer)
+							* max_exp_time = ""; (ceil to integer)
+							* step_exp_time = ""; (ceil to integer)
+							* default_exp_time = ""; (ceil to integer)
+							* Exposure Time limits for mode (sec)
+							*
+							* framerate_factor = ""; (integer factor used for floating to fixed point conversion)
+							* min_framerate = ""; (ceil to integer)
+							* max_framerate = ""; (ceil to integer)
+							* step_framerate = ""; (ceil to integer)
+							* default_framerate = ""; (ceil to integer)
+							* Framerate limits for mode (fps)
+							*
+							* embedded_metadata_height = "";
+							* Sensor embedded metadata height in units of rows.
+							* If sensor does not support embedded metadata value should be 0.
+							*/
+#if 0
+							mode0 { /* AR0234_MODE_1280x720_120FPS */
+								mclk_khz = "24000";
+								num_lanes = "2";
+								tegra_sinterface = "serial_c";
+								phy_mode = "DPHY";
+								discontinuous_clk = "no";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								dynamic_pixel_bit_depth = "16";
+								csi_pixel_bit_depth = "16";
+								mode_type = "yuv";
+								
+								active_w = "320";
+								active_h = "240";
+								pixel_phase = "uyvy";
+								readout_orientation = "90";
+								line_length = "320";
+								inherent_gain = "1";
+								mclk_multiplier = "9.33";
+								pix_clk_hz = "150000000";
+								min_gain_val = "16";
+								max_gain_val = "170"; /* 10.66x */
+								step_gain_val = "1";
+								default_gain = "16"; /* 1.00x */
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "120000000";
+								default_framerate = "120000000";
+								step_framerate = "1";
+								min_exp_time = "13"; /* us */
+								max_exp_time = "683709"; /* us */
+								embedded_metadata_height = "0";
+							};
+#endif
+							mode0 { /* AR0234_MODE_1280x720_120FPS */
+								mclk_khz = "24000";
+								num_lanes = "2";
+								tegra_sinterface = "serial_c";
+								phy_mode = "DPHY";
+								discontinuous_clk = "no";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								dynamic_pixel_bit_depth = "16";
+								csi_pixel_bit_depth = "16";
+								mode_type = "yuv";
+								
+								active_w = "640";
+								active_h = "480";
+								pixel_phase = "uyvy";
+								readout_orientation = "90";
+								line_length = "640";
+								inherent_gain = "1";
+								mclk_multiplier = "9.33";
+								pix_clk_hz = "150000000";
+								min_gain_val = "16";
+								max_gain_val = "170"; /* 10.66x */
+								step_gain_val = "1";
+								default_gain = "16"; /* 1.00x */
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "120000000";
+								default_framerate = "120000000";
+								step_framerate = "1";
+								min_exp_time = "13"; /* us */
+								max_exp_time = "683709"; /* us */
+								embedded_metadata_height = "0";
+							};
+							mode1 { /* AR0234_MODE_1280x720_120FPS */
+								mclk_khz = "24000";
+								num_lanes = "2";
+								tegra_sinterface = "serial_c";
+								phy_mode = "DPHY";
+								discontinuous_clk = "no";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								dynamic_pixel_bit_depth = "16";
+								csi_pixel_bit_depth = "16";
+								mode_type = "yuv";
+								
+								active_w = "1280";
+								active_h = "720";
+								pixel_phase = "uyvy";
+								readout_orientation = "90";
+								line_length = "1280";
+								inherent_gain = "1";
+								mclk_multiplier = "9.33";
+								pix_clk_hz = "150000000";
+								min_gain_val = "16";
+								max_gain_val = "170"; /* 10.66x */
+								step_gain_val = "1";
+								default_gain = "16"; /* 1.00x */
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "120000000";
+								step_framerate = "1";
+								default_framerate = "120000000";
+								min_exp_time = "13"; /* us */
+								max_exp_time = "683709"; /* us */
+								embedded_metadata_height = "0";
+							};
+							mode2 { /* AR0234_MODE_1920x1080_65FPS */
+								mclk_khz = "24000";
+								num_lanes = "2";
+								tegra_sinterface = "serial_c";
+								phy_mode = "DPHY";
+								discontinuous_clk = "no";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								dynamic_pixel_bit_depth = "16";
+								csi_pixel_bit_depth = "16";
+								
+								active_w = "1920";
+								active_h = "1080";
+								pixel_phase = "uyvy";
+								mode_type = "yuv";
+								readout_orientation = "90";
+								line_length = "1920";
+								inherent_gain = "1";
+								mclk_multiplier = "9.33";
+								pix_clk_hz = "150000000";
+								min_gain_val = "16";
+								max_gain_val = "170";
+								step_gain_val = "1";
+								default_gain = "16";
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000";
+								max_framerate = "65000000";
+								default_framerate = "65000000";
+								step_framerate = "1";
+								min_exp_time = "13";
+								max_exp_time = "683709";
+								step_exp_time = "1";
+								default_exp_time = "2495";
+								embedded_metadata_height = "0";
+							};
+							mode3 { /* AR0234_MODE_1920x1200_60FPS */
+								mclk_khz = "24000";
+								num_lanes = "2";
+								tegra_sinterface = "serial_c";
+								phy_mode = "DPHY";
+								discontinuous_clk = "no";
+								dpcm_enable = "false";
+								cil_settletime = "0";
+								csi_pixel_bit_depth = "16";
+								active_w = "1920";
+								active_h = "1200";
+								pixel_phase = "uyvy";
+								mode_type = "yuv";
+								readout_orientation = "90";
+								line_length = "1920";
+								inherent_gain = "1";
+								mclk_multiplier = "9.33";
+								pix_clk_hz = "150000000";
+								
+								gain_factor = "16";
+								default_gain = "16";
+								step_gain_val = "1";
+								framerate_factor = "1000000";
+								exposure_factor = "1000000";
+								min_gain_val = "16";
+								max_gain_val = "170"; /* 10.66x */
+								min_hdr_ratio = "1";
+								max_hdr_ratio = "1";
+								min_framerate = "2000000"; /* 2.0 fps */
+								max_framerate = "60000000"; /* 60.0 fps */
+								default_framerate = "60000000"; /* 60.0 fps */
+								step_framerate = "1";
+								min_exp_time = "13"; /* us */
+								max_exp_time = "683709"; /* us */
+								step_exp_time = "1";
+								default_exp_time = "2495";
+								embedded_metadata_height = "0";
+							};
+							ports {
+								#address-cells = <1>;
+								#size-cells = <0>;
+								port@0 {
+									reg = <0>;
+									ecam_ar0234_out1: endpoint {
+										status = "okay";
+										port-index = <2>;
+										bus-width = <2>;
+										remote-endpoint = <&ecam_ar0234_csi_in1>;
+									};
+								};
+							};
+						};
+					};
+				};
+				gpio@2200000 {
+					camera-control-output-low {
+						gpio-hog;
+						output-low;
+						gpios = <CAM0_PWDN 0 CAM1_PWDN 0>;
+						label = "cam0-pwdn","cam1-pwdn";
+					};
+				};
+				
+			};
+		};
+	};
+};
+
+
+
